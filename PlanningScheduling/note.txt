列表，每个产线一行，产线数量prod_line_num，每条产线是一个List，不定长，list的值是所有产品的工序排序后的编号

所有产品的工序排序好，做两个索引，一个索引产品编号 prod_ind，一个索引工序编号 task_ind

一个属性矩阵，声明各工序在各产线上所用时间 yield_time

需要考虑换线时间

产线必须大于2


初始编码方案出炉，下一步先写仿真和评价，再写变异

写各任务完成时间矩阵的时候，分四种情况讨论，是不是该产品的第一道工序，是不是该产线的第一道工序



适应度函数有问题

各任务完成时间矩阵写完，接下来就是评价函数

考虑后继的时候，忘记考虑是不是产品的第一道工序，第一道工序不是任何任务的后继

方差越小越好
适应度改为越小越好, selection有所修改

评价函数结束

下面写第一个变异的时候，数组shuffle的前两个，注意是否合理

disrupt_line写完

disrupt_prod要考虑产线能否加工该道工序的问题，放到另一道产线时，要关注产品本身前后的任务

list.copy() 只是是浅度复制，虽然修改列表不会互相影响，但修改列表中的对象(del)会影响对方列表

简单判断
一个bool数组记录等待中的队列
然后进行递归（可能会爆栈）
灵活运用产线位置和产品生产位置
一旦不行，返回-1，这里要额外判定一下